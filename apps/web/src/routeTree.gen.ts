/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/app'
import { Route as PublicImport } from './routes/_public'
import { Route as R404Import } from './routes/$404'
import { Route as AppIndexImport } from './routes/app.index'
import { Route as PublicIndexImport } from './routes/_public.index'
import { Route as AppSettingsImport } from './routes/app.settings'
import { Route as AppProfileImport } from './routes/app.profile'
import { Route as AppChannelIdImport } from './routes/app.$channelId'
import { Route as PublicRegisterImport } from './routes/_public.register'
import { Route as PublicLoginImport } from './routes/_public.login'
import { Route as PublicAboutImport } from './routes/_public.about'
import { Route as AppChannelIdTasksImport } from './routes/app.$channelId.tasks'
import { Route as AppChannelIdPollsImport } from './routes/app.$channelId.polls'
import { Route as AppChannelIdChatImport } from './routes/app.$channelId.chat'
import { Route as AppChannelIdCallsImport } from './routes/app.$channelId.calls'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/$404',
  path: '/$404',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)

const AppChannelIdRoute = AppChannelIdImport.update({
  id: '/$channelId',
  path: '/$channelId',
  getParentRoute: () => AppRoute,
} as any)

const PublicRegisterRoute = PublicRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => PublicRoute,
} as any)

const PublicLoginRoute = PublicLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAboutRoute = PublicAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => PublicRoute,
} as any)

const AppChannelIdTasksRoute = AppChannelIdTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => AppChannelIdRoute,
} as any)

const AppChannelIdPollsRoute = AppChannelIdPollsImport.update({
  id: '/polls',
  path: '/polls',
  getParentRoute: () => AppChannelIdRoute,
} as any)

const AppChannelIdChatRoute = AppChannelIdChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AppChannelIdRoute,
} as any)

const AppChannelIdCallsRoute = AppChannelIdCallsImport.update({
  id: '/calls',
  path: '/calls',
  getParentRoute: () => AppChannelIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$404': {
      id: '/$404'
      path: '/$404'
      fullPath: '/$404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutImport
      parentRoute: typeof PublicImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicImport
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterImport
      parentRoute: typeof PublicImport
    }
    '/app/$channelId': {
      id: '/app/$channelId'
      path: '/$channelId'
      fullPath: '/app/$channelId'
      preLoaderRoute: typeof AppChannelIdImport
      parentRoute: typeof AppImport
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppImport
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/app/$channelId/calls': {
      id: '/app/$channelId/calls'
      path: '/calls'
      fullPath: '/app/$channelId/calls'
      preLoaderRoute: typeof AppChannelIdCallsImport
      parentRoute: typeof AppChannelIdImport
    }
    '/app/$channelId/chat': {
      id: '/app/$channelId/chat'
      path: '/chat'
      fullPath: '/app/$channelId/chat'
      preLoaderRoute: typeof AppChannelIdChatImport
      parentRoute: typeof AppChannelIdImport
    }
    '/app/$channelId/polls': {
      id: '/app/$channelId/polls'
      path: '/polls'
      fullPath: '/app/$channelId/polls'
      preLoaderRoute: typeof AppChannelIdPollsImport
      parentRoute: typeof AppChannelIdImport
    }
    '/app/$channelId/tasks': {
      id: '/app/$channelId/tasks'
      path: '/tasks'
      fullPath: '/app/$channelId/tasks'
      preLoaderRoute: typeof AppChannelIdTasksImport
      parentRoute: typeof AppChannelIdImport
    }
  }
}

// Create and export the route tree

interface PublicRouteChildren {
  PublicAboutRoute: typeof PublicAboutRoute
  PublicLoginRoute: typeof PublicLoginRoute
  PublicRegisterRoute: typeof PublicRegisterRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicAboutRoute: PublicAboutRoute,
  PublicLoginRoute: PublicLoginRoute,
  PublicRegisterRoute: PublicRegisterRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

interface AppChannelIdRouteChildren {
  AppChannelIdCallsRoute: typeof AppChannelIdCallsRoute
  AppChannelIdChatRoute: typeof AppChannelIdChatRoute
  AppChannelIdPollsRoute: typeof AppChannelIdPollsRoute
  AppChannelIdTasksRoute: typeof AppChannelIdTasksRoute
}

const AppChannelIdRouteChildren: AppChannelIdRouteChildren = {
  AppChannelIdCallsRoute: AppChannelIdCallsRoute,
  AppChannelIdChatRoute: AppChannelIdChatRoute,
  AppChannelIdPollsRoute: AppChannelIdPollsRoute,
  AppChannelIdTasksRoute: AppChannelIdTasksRoute,
}

const AppChannelIdRouteWithChildren = AppChannelIdRoute._addFileChildren(
  AppChannelIdRouteChildren,
)

interface AppRouteChildren {
  AppChannelIdRoute: typeof AppChannelIdRouteWithChildren
  AppProfileRoute: typeof AppProfileRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppChannelIdRoute: AppChannelIdRouteWithChildren,
  AppProfileRoute: AppProfileRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/$404': typeof R404Route
  '': typeof PublicRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/about': typeof PublicAboutRoute
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/app/$channelId': typeof AppChannelIdRouteWithChildren
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/': typeof PublicIndexRoute
  '/app/': typeof AppIndexRoute
  '/app/$channelId/calls': typeof AppChannelIdCallsRoute
  '/app/$channelId/chat': typeof AppChannelIdChatRoute
  '/app/$channelId/polls': typeof AppChannelIdPollsRoute
  '/app/$channelId/tasks': typeof AppChannelIdTasksRoute
}

export interface FileRoutesByTo {
  '/$404': typeof R404Route
  '/about': typeof PublicAboutRoute
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/app/$channelId': typeof AppChannelIdRouteWithChildren
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/': typeof PublicIndexRoute
  '/app': typeof AppIndexRoute
  '/app/$channelId/calls': typeof AppChannelIdCallsRoute
  '/app/$channelId/chat': typeof AppChannelIdChatRoute
  '/app/$channelId/polls': typeof AppChannelIdPollsRoute
  '/app/$channelId/tasks': typeof AppChannelIdTasksRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$404': typeof R404Route
  '/_public': typeof PublicRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/_public/about': typeof PublicAboutRoute
  '/_public/login': typeof PublicLoginRoute
  '/_public/register': typeof PublicRegisterRoute
  '/app/$channelId': typeof AppChannelIdRouteWithChildren
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/_public/': typeof PublicIndexRoute
  '/app/': typeof AppIndexRoute
  '/app/$channelId/calls': typeof AppChannelIdCallsRoute
  '/app/$channelId/chat': typeof AppChannelIdChatRoute
  '/app/$channelId/polls': typeof AppChannelIdPollsRoute
  '/app/$channelId/tasks': typeof AppChannelIdTasksRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$404'
    | ''
    | '/app'
    | '/about'
    | '/login'
    | '/register'
    | '/app/$channelId'
    | '/app/profile'
    | '/app/settings'
    | '/'
    | '/app/'
    | '/app/$channelId/calls'
    | '/app/$channelId/chat'
    | '/app/$channelId/polls'
    | '/app/$channelId/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$404'
    | '/about'
    | '/login'
    | '/register'
    | '/app/$channelId'
    | '/app/profile'
    | '/app/settings'
    | '/'
    | '/app'
    | '/app/$channelId/calls'
    | '/app/$channelId/chat'
    | '/app/$channelId/polls'
    | '/app/$channelId/tasks'
  id:
    | '__root__'
    | '/$404'
    | '/_public'
    | '/app'
    | '/_public/about'
    | '/_public/login'
    | '/_public/register'
    | '/app/$channelId'
    | '/app/profile'
    | '/app/settings'
    | '/_public/'
    | '/app/'
    | '/app/$channelId/calls'
    | '/app/$channelId/chat'
    | '/app/$channelId/polls'
    | '/app/$channelId/tasks'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  R404Route: typeof R404Route
  PublicRoute: typeof PublicRouteWithChildren
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  PublicRoute: PublicRouteWithChildren,
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$404",
        "/_public",
        "/app"
      ]
    },
    "/$404": {
      "filePath": "$404.tsx"
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/about",
        "/_public/login",
        "/_public/register",
        "/_public/"
      ]
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/$channelId",
        "/app/profile",
        "/app/settings",
        "/app/"
      ]
    },
    "/_public/about": {
      "filePath": "_public.about.tsx",
      "parent": "/_public"
    },
    "/_public/login": {
      "filePath": "_public.login.tsx",
      "parent": "/_public"
    },
    "/_public/register": {
      "filePath": "_public.register.tsx",
      "parent": "/_public"
    },
    "/app/$channelId": {
      "filePath": "app.$channelId.tsx",
      "parent": "/app",
      "children": [
        "/app/$channelId/calls",
        "/app/$channelId/chat",
        "/app/$channelId/polls",
        "/app/$channelId/tasks"
      ]
    },
    "/app/profile": {
      "filePath": "app.profile.tsx",
      "parent": "/app"
    },
    "/app/settings": {
      "filePath": "app.settings.tsx",
      "parent": "/app"
    },
    "/_public/": {
      "filePath": "_public.index.tsx",
      "parent": "/_public"
    },
    "/app/": {
      "filePath": "app.index.tsx",
      "parent": "/app"
    },
    "/app/$channelId/calls": {
      "filePath": "app.$channelId.calls.tsx",
      "parent": "/app/$channelId"
    },
    "/app/$channelId/chat": {
      "filePath": "app.$channelId.chat.tsx",
      "parent": "/app/$channelId"
    },
    "/app/$channelId/polls": {
      "filePath": "app.$channelId.polls.tsx",
      "parent": "/app/$channelId"
    },
    "/app/$channelId/tasks": {
      "filePath": "app.$channelId.tasks.tsx",
      "parent": "/app/$channelId"
    }
  }
}
ROUTE_MANIFEST_END */
